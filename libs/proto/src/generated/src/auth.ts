// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v6.32.1
// source: src/auth.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { wrappers } from "protobufjs";
import { Observable } from "rxjs";
import { Struct } from "../google/protobuf/struct.js";

export const protobufAuthPackage = "auth";

export interface ServiceResponse {
  statusCode: number;
  message: string;
  data: { [key: string]: any } | undefined;
}

export interface RegisterUserRequest {
  firstName: string;
  lastName: string;
  email: string;
  phone: string;
  password: string;
  role: string;
}

export interface RegisterUserResponse {
  data: ServiceResponse | undefined;
}

export interface TestRequest {
  name: string;
}

export interface TestResponse {
  message: string;
}

export const AUTH_PACKAGE_NAME = "auth";

wrappers[".google.protobuf.Struct"] = { fromObject: Struct.wrap, toObject: Struct.unwrap } as any;

export interface AuthServiceClient {
  test(request: TestRequest): Observable<TestResponse>;

  registerUser(request: RegisterUserRequest): Observable<RegisterUserResponse>;
}

export interface AuthServiceController {
  test(request: TestRequest): Promise<TestResponse> | Observable<TestResponse> | TestResponse;

  registerUser(
    request: RegisterUserRequest,
  ): Promise<RegisterUserResponse> | Observable<RegisterUserResponse> | RegisterUserResponse;
}

export function AuthServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["test", "registerUser"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("AuthService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("AuthService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const AUTH_SERVICE_NAME = "AuthService";
