name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  actions: read
  packages: read

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

jobs:
  setup:
    name: Setup Node, pnpm, and Nx Cloud
    runs-on: ubuntu-latest
    outputs:
      nx-cloud-cache-key: ${{ steps.nx-cloud.outputs.cache-hit }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          registry-url: "https://npm.pkg.github.com"

      - name: Authenticate GitHub Packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" > ~/.npmrc
          echo "@vaahe:registry=https://npm.pkg.github.com" >> ~/.npmrc
          echo "always-auth=true" >> ~/.npmrc

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Start Nx Cloud CI Run
        id: nx-cloud
        run: pnpm nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="build"

  lint:
    name: Lint affected projects
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          registry-url: "https://npm.pkg.github.com"
          scope: "@vaahe"

      - name: Authenticate GitHub Packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${GH_TOKEN}" > ~/.npmrc
          echo "@vaahe:registry=https://npm.pkg.github.com" >> ~/.npmrc

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run lint
        run: pnpm nx affected --target=lint --parallel=3 --nx-cloud

  test:
    name: Test affected projects
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          registry-url: "https://npm.pkg.github.com"
          scope: "@vaahe"

      - name: Authenticate GitHub Packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${GH_TOKEN}" > ~/.npmrc
          echo "@vaahe:registry=https://npm.pkg.github.com" >> ~/.npmrc

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run unit tests
        run: pnpm nx affected --target=test --parallel=3 --nx-cloud --code-coverage

  build:
    name: Build affected projects
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          registry-url: "https://npm.pkg.github.com"
          scope: "@vaahe"

      - name: Authenticate GitHub Packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${GH_TOKEN}" > ~/.npmrc
          echo "@vaahe:registry=https://npm.pkg.github.com" >> ~/.npmrc

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build projects
        run: pnpm nx affected --target=build --parallel=3 --nx-cloud

  # fix-ci:
  #   name: Nx fix CI
  #   needs: [lint, test, build]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #         cache: "pnpm"

  #     - name: Install pnpm
  #       uses: pnpm/action-setup@v4
  #       with:
  #         version: 10.17.1.17.1
  #         run_install: false

  #     - name: Nx fix-ci
  #       run: pnpm nx fix-ci
